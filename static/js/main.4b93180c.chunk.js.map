{"version":3,"sources":["components/ResponsiveCanvas.js","hooks/windowResize.js","components/Sidebar.js","gl/shader/sphereVert.glsl","gl/shader/sphereFrag.glsl","gl/initialize.js","gl/resize.js","gl/animate.js","App.js","reportWebVitals.js","index.js"],"names":["ResponsiveCanvas","onInit","onResize","animate","setUniforms","elementID","useState","width","height","windowSize","setWindowSize","handleResize","element","document","getElementById","offsetWidth","offsetHeight","useEffect","window","addEventListener","removeEventListener","useWindowSize","ctx","setCtx","a","uniforms","id","className","css","Header","children","decomposition","n","terms","binom","k","Math","floor","push","exponent","join","Amplitudes","spin","amplitudes","setAmplitude","undefined","output","i","entry","magnitude","length","Slider","min","max","step","value","onChange","e","v","Object","entries","Drive","setUniform","drive","label","key","marks","valueLabelDisplay","ObservableEntry","name","err","unit","numString","toFixed","Observables","lengthSq","n_err","sqrt","Sidebar","atoms","spinComponents","MAX_SPIN","obj","orig","x","y","OrbitControls","require","THREE","initialize","console","log","canvas","gl","getContext","preventDefault","scene","background","camera","innerWidth","innerHeight","renderer","context","fetch","vsResource","text","vertexShader","fsResource","fragmentShader","Array","map","detuning","squeezing","sphere","defines","MAX_SIZE","M_PI","PI","add","points","axes","setFromPoints","color","controls","enableDamping","rotateSpeed","minDistance","maxDistance","position","z","resize","aspect","updateProjectionMatrix","setSize","cached_params","cached_propagator","propagate","dt","M","H","strength","zeros","s","subset","index","Sx","omega","I","identity","multiply","inv","expm","complex","initial","slice","el","re","im","total","normalizeWavefunction","requestAnimationFrame","render","update","time","performance","now","lastTime","App","handleInit","handleAnimationFrame","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.4b93180c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { css } from '@emotion/css';\n\nimport { InlineMath } from 'react-katex';\n\nimport useWindowSize from 'hooks/windowResize';\n\n\nexport default function ResponsiveCanvas({onInit, onResize, animate, setUniforms}) {\n    const {width, height} = useWindowSize('canvas-container');\n    const [ctx, setCtx] = useState(null);\n\n    useEffect(() => {\n        (async function() {\n            const ctx = await onInit();\n            setCtx(ctx);\n            setUniforms(ctx.uniforms);\n            animate(ctx, setUniforms);\n        })();\n    }, [onInit, animate, setUniforms]);\n    useEffect(() => {onResize(ctx, width, height);}, [onResize, ctx, width, height]);\n\n    return <div id='canvas-container' className={css`\n        flex-grow: 1;\n        overflow: hidden;\n        position: relative;\n    `}>\n        <div className={css`\n            position: absolute;\n            top: 32px;\n            left: 32px;\n            color: white;\n            opacity: 0.8;\n            z-index: 2;\n\n            font-size: 24px;\n\n            @media (max-width: 1000px) {\n                font-size: 20px;\n                top: 16px;\n                left: 16px;\n            }\n        `}><InlineMath>Q(\\theta, \\phi) \\propto |\\langle\\theta, \\phi \\, | \\, \\psi\\rangle|^2</InlineMath></div>\n        <canvas\n        id='main'\n        width={width} height={height}\n        className={css`\n            display: block;\n        `}\n    /></div>;\n};\n","import { useState, useEffect } from 'react';\n\nexport default function useWindowSize(elementID) {\n    const [windowSize, setWindowSize] = useState({width: null, height: null});\n\n    function handleResize() {\n        const element = document.getElementById(elementID);\n        setWindowSize({width: element.offsetWidth, height: element.offsetHeight});\n    }\n\n    useEffect(() => {\n        window.addEventListener('resize', handleResize);\n        handleResize();\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    return windowSize;\n}\n","import React from 'react';\nimport { css } from '@emotion/css';\n\nimport Slider from '@material-ui/core/Slider';\n\nimport { InlineMath } from 'react-katex';\n\n\nconst MAX_SPIN = 14;\n\n\nfunction formatSpin(spin) {\n    if (spin === undefined) {return;}\n\n    if (spin % 2 === 0) {\n        return (spin/2).toString();\n    } else {\n        return `${spin}/2`;\n    }\n}\n\n\nfunction Header({children}) {\n    return <h2 className={css`\n        margin-top: 32px;\n\n        font-size: 14px;\n        color: hsl(200, 10%, 40%);\n        font-weight: 500;\n        letter-spacing: 0.09em;\n        text-transform: uppercase;\n\n        @media (max-width: 1000px) {\n            font-size: 12px;\n            margin-top: 16px;\n        }\n    `}>{children}</h2>;\n}\n\nfunction decomposition(n) {\n    const terms = [];\n    let binom = 1;\n    for (let k = 0; k <= Math.floor(n/2); k++) {\n        if (k > 3) {\n            terms.push('\\\\cdots');\n            break;\n        }\n\n        const exponent = binom * (n+1-2*k)/(n+1);\n        if (exponent > 1) {\n            terms.push(`\\\\mathbf{${n+1-2*k}}^{\\\\otimes${exponent}}`);\n        } else {\n            terms.push(`\\\\mathbf{${n+1-2*k}}`);\n        }\n\n        binom *= n+1-k;\n        binom /= k+1;\n    }\n    return `\\\\mathbf{2}^{\\\\otimes ${n}} = ` + terms.join('\\\\oplus');\n}\n\n\nfunction Amplitudes({spin, amplitudes, setAmplitude}) {\n    if (amplitudes === undefined) {return null;}\n    const output = [];\n    for (let [i, entry] of Object.entries(amplitudes)) {\n        if (i > spin - 1) continue;\n        const magnitude = entry.length();\n\n        output.push(<div key={i} className={css`\n            color: hsl(200, 10%, 30%);\n            display: flex;\n            flex-direction: row;\n        `}>\n             <span className={css`min-width: 64px;`}>\n                <InlineMath>{`|${i}\\\\rangle`}</InlineMath>\n             </span>\n             <Slider\n                min={0} max={1} step={0.001}\n                value={magnitude}\n                onChange={(e, v) => setAmplitude(i, v)}\n             />\n        </div>);\n    }\n    return <>{output}</>;\n}\n\nfunction Drive({uniforms, setUniform}) {\n    const entries = [\n        ['Detuning', 'detuning'],\n        ['Drive Strength', 'drive'],\n        ['Squeezing', 'squeezing'],\n    ];\n    if (uniforms.drive === undefined) {return null;}\n\n    const output = [];\n    for (let [label, key] of entries) {\n        output.push(<div key={key} className={css`\n            color: hsl(200, 10%, 30%);\n            display: flex;\n            flex-direction: row;\n            align-items: center;\n            \n            @media (max-width: 1000px) {\n                max-height: 24px;\n            }\n\n        `}>\n            <span className={css`\n                min-width: 120px;\n                color: hsl(200, 10%, 15%);\n                font-size: 12pt;\n                white-space: nowrap;\n\n                @media (max-width: 1000px) {\n                    font-size: 11pt;\n                }\n            `}>\n                 {label}\n             </span>\n             <Slider\n                 min={-1} max={1} step={0.25}\n                 marks\n                 value={uniforms[key]?.value}\n                 onChange={(e, v) => setUniform(key, v)}\n                 valueLabelDisplay='auto'\n             />\n        </div>);\n    }\n    return <>{output}</>;\n}\n\nfunction ObservableEntry({name, value, err, unit}) {\n    const numString = `${value.toFixed(3)} \\\\, \\\\pm \\\\, ${err.toFixed(3)}`;\n    if (unit === undefined) {\n        return <InlineMath>{`\\\\langle ${name}\\\\rangle = ${numString}`}</InlineMath>;\n    }\n    return <InlineMath>{`\\\\langle ${name}\\\\rangle = (${numString}) \\\\, ${unit}`}</InlineMath>;\n}\n\n\nfunction Observables({spin, amplitudes}) {\n    let n = 0;\n    for (let i = 0; i < spin; i++) {\n        const prob = amplitudes[i].lengthSq();\n        n += prob * i;\n    }\n\n    let n_err = 0;\n    for (let i = 0; i < spin; i++) {\n        const prob = amplitudes[i].lengthSq();\n        n_err += prob * (i - n)**2;\n    }\n    n_err = Math.sqrt(n_err);\n\n    return <div className={css`\n        display: flex;\n        flex-direction: column;\n        \n        justify-content: space-between;\n        min-height: 60px;\n    `}>\n        <ObservableEntry name='S_z' value={n - (spin-1)/2} err={n_err} unit='\\hbar'/>\n    </div>\n}\n\n\n\n\nexport default function Sidebar({uniforms, setUniforms}) {\n    const spin = uniforms.spin?.value;\n    const atoms = spin - 1;\n    const amplitudes = uniforms.spinComponents?.value;\n\n    function setUniform(name, value) {\n        uniforms[name].value = value;\n        setUniforms({...uniforms});\n    }\n\n    function setSpin(value) {\n        setUniform('spin', Math.max(2, Math.min(MAX_SPIN, value)));\n    }\n\n    function setAmplitude(n, magnitude) {\n        const obj = uniforms.spinComponents.value[n];\n        const orig = obj.length();\n        if (orig === 0) {\n            obj.x = magnitude;\n            obj.y = 0;\n        } else {\n            obj.x *= magnitude / orig;\n            obj.y *= magnitude / orig;\n        }\n        setUniforms({...uniforms});\n    }\n\n    return <div className={css`\n        min-width: 400px;\n        background-color: white;\n        box-shadow: 1px 1px 4px hsla(200, 10%, 10%, 0.1);\n        font-size: 18px;\n        padding: 32px;\n\n        @media (max-width: 1000px) {\n            min-width: unset;\n            padding: 22px;\n\n            font-size: 14px;\n        }\n    `}>\n        <div className={css`\n            @media (max-width: 1000px) {\n                margin-top: -8px;\n                margin-bottom: -8px;\n                display: flex;\n                flex-direction: row;\n                align-items: center;\n            }\n        `}>\n            <span className={css`\n                white-space: nowrap;\n                min-width: 80px;\n            `}>{atoms}{atoms > 1 ? ' atoms' : ' atom'}</span>\n            <Slider\n                value={atoms}\n                onChange={(e, v) => setSpin(v+1)}\n                step={1}\n                min={1}\n                max={MAX_SPIN-1}\n                marks\n            />\n        </div>\n\n        <Header>Spin Decomposition</Header>\n        <InlineMath>{decomposition(atoms)}</InlineMath>\n\n        <Header>Drive Fields</Header>\n        <Drive uniforms={uniforms} setUniform={setUniform}/>\n\n        <div className={css`\n            @media (max-width: 1000px) {\n                display: none;\n            }\n        `}>\n\n            <Header>Stretched Representation Amplitudes</Header>\n            <Observables spin={spin} amplitudes={amplitudes}/>\n            <Amplitudes spin={spin} amplitudes={amplitudes} setAmplitude={setAmplitude}/>\n        </div>\n    </div>;\n};\n","export default __webpack_public_path__ + \"static/media/sphereVert.074410ee.glsl\";","export default __webpack_public_path__ + \"static/media/sphereFrag.75020784.glsl\";","import * as THREE from 'three';\n\nimport vsResource from './shader/sphereVert.glsl';\nimport fsResource from './shader/sphereFrag.glsl';\n\nconst OrbitControls = require('three-orbit-controls')(THREE);\n\nexport default async function initialize() {\n    console.log('Initializing WebGL');\n\n    const canvas = document.getElementById('main');\n    const gl = canvas.getContext('webgl');\n\n    canvas.addEventListener('touchstart', (e) => e.preventDefault());\n\n    // Initialize scene\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x080808);\n    const camera = new THREE.PerspectiveCamera(\n        75, window.innerWidth/window.innerHeight, 0.1, 1000\n    );\n    const renderer = new THREE.WebGLRenderer({context: gl});\n\n    // Initialize geometry\n    const vertexShader = await (await fetch(vsResource)).text();\n    const fragmentShader = await (await fetch(fsResource)).text();\n\n    const MAX_SIZE = 14;\n    const uniforms = {\n        spin: {value: 13},\n        spinComponents: {value: [...new Array(MAX_SIZE)].map(() => new THREE.Vector2(0, 0))},\n        drive: {value: 0.5},\n        detuning: {value: 0.5},\n        squeezing: {value: 0},\n    };\n    uniforms.spinComponents.value[6].x = 1;\n    const sphere = new THREE.Mesh(\n        new THREE.SphereGeometry(0.99, 32, 32),\n        new THREE.ShaderMaterial({\n            defines: {\n                MAX_SIZE,\n                M_PI: Math.PI,\n            },\n            uniforms,\n            vertexShader,\n            fragmentShader,\n        })\n    );\n    scene.add(sphere);\n\n\n    // Initialize Axes\n    const points = [\n        new THREE.Vector3(0, 0, 0), new THREE.Vector3(1.5, 0, 0),\n        new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 1.5, 0),\n        new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 0, 1.5),\n    ];\n    const axes = new THREE.LineSegments(\n        new THREE.BufferGeometry().setFromPoints(points),\n        new THREE.LineBasicMaterial({color: 0x808080}),\n    );\n    scene.add(axes);\n\n    // Initialize controls\n    const controls = new OrbitControls(camera, canvas);\n    controls.enableDamping = true;\n    controls.rotateSpeed = 0.3;\n    controls.minDistance = 1.5;\n    controls.maxDistance = 5;\n\n    camera.position.z = 3;\n\n    return {\n        gl, scene,\n        camera, renderer, controls,\n        sphere, uniforms,\n    };\n};\n","export default function resize(ctx, width, height) {\n    console.log('Resizing', width, height);\n\n    if (ctx === null) {return;}\n    const {renderer, camera} = ctx;\n\n    camera.aspect = width/height;\n    camera.updateProjectionMatrix();\n    renderer.setSize(width, height);\n};\n","import {\n    zeros,\n    identity, subset, index,\n    multiply, add,\n    complex, inv\n} from 'mathjs';\n\nfunction normalizeWavefunction(uniforms) {\n    // Normalize spin components\n    const spin = uniforms.spin.value;\n    const amplitudes = uniforms.spinComponents.value;\n\n    let total = 0;\n    for (let i = 0; i < spin; i++) {\n        const probability = amplitudes[i].lengthSq();\n        total += probability;\n    }\n    total = Math.sqrt(total + 1e-3);\n\n    for (let i = 0; i < spin; i++) {\n        amplitudes[i].x /= total;\n        amplitudes[i].y /= total;\n    }\n}\n\nfunction expm(n, H) {\n    // Crank-Nicolson approximation\n    const I = identity(n);\n    return multiply(\n        inv(add(I, multiply(-0.5, H))),\n        add(I, multiply(0.5, H))\n    );\n}\n\n// Spin operators\nfunction Sx(n, strength) {\n    const H = zeros(n, n);\n    const s = (n-1)/2;\n    for (let a = 1; a < n; a++) {\n        const v = strength * 0.5 * Math.sqrt(2*a*(s+1) - a*(a+1));\n        H.subset(index(a-1, a), v);\n        H.subset(index(a, a-1), v);\n    }\n    return H;\n}\n\nlet cached_params = [undefined, undefined, undefined, undefined];\nlet cached_propagator = undefined;\n\nfunction propagate(uniforms, dt) {\n    const spin = uniforms.spin.value;\n    const amplitudes = uniforms.spinComponents.value;\n\n    const drive = uniforms.drive.value;\n    const detuning = uniforms.detuning.value;\n    const squeezing = uniforms.squeezing.value;\n\n    let M = undefined;\n\n    if (spin === cached_params[0]\n        & drive === cached_params[1]\n        & detuning === cached_params[2]\n        & squeezing === cached_params[3]\n    ) {\n        M = cached_propagator;\n    } else {\n        console.log('Cache miss');\n        const H = Sx(spin, drive);\n\n        // Add dynamical phase and squeezing operators\n        for (let i = 0; i < spin; i++) {\n            const omega = i - (spin-1)/2;\n            H.subset(index(i, i), detuning * omega + squeezing * omega**2); // Set diagonal entry\n        }\n\n        // Compute matrix exponential\n        M = expm(spin, multiply(complex(0, -dt), H));\n        cached_params = [spin, drive, detuning, squeezing];\n        cached_propagator = M;\n    }\n\n    const initial = amplitudes.slice(0, spin).map(\n        ({x, y}) => complex(x, y)\n    );\n    const output = multiply(M, initial);\n\n    // Write final coefficients and normalize\n    for (let i = 0; i < spin; i++) {\n        const el = subset(output, index(i));\n        amplitudes[i].x = el.re;\n        amplitudes[i].y = el.im;\n    }\n    normalizeWavefunction(uniforms);\n}\n\nexport default function animate(ctx, setUniforms) {\n    const {renderer, scene, camera, controls, uniforms} = ctx;\n    requestAnimationFrame(() => animate(ctx, setUniforms));\n    if (ctx === null) {return;}\n\n    // Render scene\n    renderer.render(scene, camera);\n    controls.update();\n\n    const time = performance.now()\n    if (ctx.lastTime !== undefined) {\n//        const dt = 1e-3 * (time - ctx.lastTime);\n        const dt = 1/30;\n        propagate(uniforms, dt);\n        setUniforms({...uniforms});\n    }\n    ctx.lastTime = time;\n};\n","import React, { useState } from 'react';\nimport { css } from '@emotion/css';\n\nimport 'katex/dist/katex.min.css';\n\nimport ResponsiveCanvas from 'components/ResponsiveCanvas';\nimport Sidebar from 'components/Sidebar';\n\nimport handleInit from 'gl/initialize';\nimport handleResize from 'gl/resize';\nimport handleAnimationFrame from 'gl/animate';\n\nfunction App() {\n  const [uniforms, setUniforms] = useState({});\n\n  return <div className={css`\n        width: 100%;\n        height: 100%;\n\n        display: flex;\n        flex-direction: row;\n\n        @media (max-width: 1000px) {\n             flex-direction: column;\n        }\n  `}>\n        <Sidebar\n            uniforms={uniforms}\n            setUniforms={setUniforms}\n        />\n        <ResponsiveCanvas\n            onInit={handleInit}\n            onResize={handleResize}\n            animate={handleAnimationFrame}\n\n            setUniforms={setUniforms}\n        />\n  </div>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}