{"version":3,"sources":["components/ResponsiveCanvas.js","hooks/windowResize.js","components/Sidebar.js","gl/shader/sphereVert.glsl","gl/shader/sphereFrag.glsl","gl/initialize.js","gl/resize.js","gl/animate.js","App.js","reportWebVitals.js","index.js"],"names":["ResponsiveCanvas","onInit","onResize","animate","initUniforms","elementID","useState","width","height","windowSize","setWindowSize","handleResize","element","document","getElementById","offsetWidth","offsetHeight","useEffect","window","addEventListener","removeEventListener","useWindowSize","ctx","setCtx","a","uniforms","id","className","css","Header","children","decomposition","n","terms","binom","k","Math","floor","push","exponent","join","Amplitudes","spin","amplitudes","setAmplitude","undefined","output","i","entry","magnitude","length","Slider","min","max","step","value","onChange","e","v","Object","entries","ObservableEntry","name","err","unit","numString","toFixed","Observables","lengthSq","n_err","sqrt","normalizeWavefunction","spinComponents","total","probability","x","y","Sidebar","setUniforms","atoms","MAX_SPIN","obj","orig","OrbitControls","require","THREE","initialize","canvas","gl","getContext","preventDefault","scene","background","camera","innerWidth","innerHeight","renderer","context","fetch","vsResource","text","vertexShader","fsResource","fragmentShader","Array","map","time","sphere","defines","MAX_SIZE","M_PI","PI","add","points","axes","setFromPoints","color","controls","enableDamping","rotateSpeed","minDistance","maxDistance","position","z","resize","aspect","updateProjectionMatrix","setSize","requestAnimationFrame","render","update","startTime","Date","App","handleInit","handleAnimationFrame","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"gRAQe,SAASA,EAAT,GAAsE,IAA3CC,EAA0C,EAA1CA,OAAQC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,aACjE,ECPW,SAAuBC,GAClC,MAAoCC,mBAAS,CAACC,MAAO,KAAMC,OAAQ,OAAnE,mBAAOC,EAAP,KAAmBC,EAAnB,KAEA,SAASC,IACL,IAAMC,EAAUC,SAASC,eAAeT,GACxCK,EAAc,CAACH,MAAOK,EAAQG,YAAaP,OAAQI,EAAQI,eAS/D,OANAC,qBAAU,WAGN,OAFAC,OAAOC,iBAAiB,SAAUR,GAClCA,IACO,kBAAMO,OAAOE,oBAAoB,SAAUT,MACnD,IAEIF,EDPiBY,CAAc,oBAA/Bd,EAAP,EAAOA,MAAOC,EAAd,EAAcA,OACd,EAAsBF,mBAAS,MAA/B,mBAAOgB,EAAP,KAAYC,EAAZ,KAYA,OAVAN,qBAAU,WACN,sBAAC,4BAAAO,EAAA,sEACqBvB,IADrB,OACSqB,EADT,OAEGC,EAAOD,GACPlB,EAAakB,EAAIG,UACjBtB,EAAQmB,GAJX,0CAAD,KAMD,CAACrB,EAAQE,EAASC,IACrBa,qBAAU,WAAOf,EAASoB,EAAKf,EAAOC,KAAW,CAACN,EAAUoB,EAAKf,EAAOC,IAEjE,sBAAKkB,GAAG,mBAAmBC,UAAWC,YAAF,+GAApC,UAKH,qBAAKD,UAAWC,YAAF,2XAAd,SAeG,cAAC,aAAD,8FACH,wBACAF,GAAG,OACHnB,MAAOA,EAAOC,OAAQA,EACtBmB,UAAWC,YAAF,sE,gCExBjB,SAASC,EAAT,GAA6B,IAAZC,EAAW,EAAXA,SACb,OAAO,oBAAIH,UAAWC,YAAF,2UAAb,SAaHE,IAGR,SAASC,EAAcC,GAGnB,IAFA,IAAMC,EAAQ,GACVC,EAAQ,EACHC,EAAI,EAAGA,GAAKC,KAAKC,MAAML,EAAE,GAAIG,IAAK,CACvC,GAAIA,EAAI,EAAG,CACPF,EAAMK,KAAK,WACX,MAGJ,IAAMC,EAAWL,GAASF,EAAE,EAAE,EAAEG,IAAIH,EAAE,GAClCO,EAAW,EACXN,EAAMK,KAAN,mBAAuBN,EAAE,EAAE,EAAEG,EAA7B,sBAA4CI,EAA5C,MAEAN,EAAMK,KAAN,mBAAuBN,EAAE,EAAE,EAAEG,EAA7B,MAGJD,GAASF,EAAE,EAAEG,EACbD,GAASC,EAAE,EAEf,MAAO,gCAAyBH,EAAzB,QAAmCC,EAAMO,KAAK,WAIzD,SAASC,EAAT,GAAuD,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,aACnC,QAAmBC,IAAfF,EAA2B,OAAO,KAEtC,IADA,IAAMG,EAAS,GAFmC,aAG7C,0BAAKC,EAAL,KAAQC,EAAR,KACD,GAAID,EAAIL,EAAO,EAAG,iBAClB,IAAMO,EAAYD,EAAME,SAExBJ,EAAOR,KAAK,sBAAaX,UAAWC,YAAF,0IAAtB,UAKP,sBAAMD,UAAWC,YAAF,0CAAf,SACG,cAAC,aAAD,qBAAiBmB,EAAjB,gBAEH,cAACI,EAAA,EAAD,CACGC,IAAK,EAAGC,IAAK,EAAGC,KAAM,KACtBC,MAAON,EACPO,SAAU,SAACC,EAAGC,GAAJ,OAAUd,EAAaG,EAAGW,QAXtBX,KAJ1B,MAAuBY,OAAOC,QAAQjB,GAAtC,eAAmD,IAmBnD,OAAO,mCAAGG,IAGd,SAASe,EAAT,GAAoD,IAA1BC,EAAyB,EAAzBA,KAAMP,EAAmB,EAAnBA,MAAOQ,EAAY,EAAZA,IAAKC,EAAO,EAAPA,KAClCC,EAAS,UAAMV,EAAMW,QAAQ,GAApB,yBAAuCH,EAAIG,QAAQ,IAClE,YAAarB,IAATmB,EACO,cAAC,aAAD,6BAAyBF,EAAzB,sBAA2CG,KAE/C,cAAC,aAAD,6BAAyBH,EAAzB,uBAA4CG,EAA5C,iBAA8DD,KAIzE,SAASG,EAAT,GAEI,IAFsC,IAApBzB,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,WACpBX,EAAI,EACCe,EAAI,EAAGA,EAAIL,EAAMK,IAAK,CAE3Bf,GADaW,EAAWI,GAAGqB,WACfrB,EAIhB,IADA,IAAIsB,EAAQ,EACHtB,EAAI,EAAGA,EAAIL,EAAMK,IAAK,CAE3BsB,GADa1B,EAAWI,GAAGqB,WACd,SAAIrB,EAAIf,EAAI,GAI7B,OAFAqC,EAAQjC,KAAKkC,KAAKD,GAEX,sBAAK1C,UAAWC,YAAF,uKAAd,UAOH,cAACiC,EAAD,CAAiBC,KAAK,oBAAmBP,MAAOvB,EAAG+B,IAAKM,IACxD,cAACR,EAAD,CAAiBC,KAAK,MAAMP,MAAOvB,GAAKU,EAAK,GAAG,EAAGqB,IAAKM,EAAOL,KAAK,cAM5E,SAASO,EAAsB9C,GAE3B,IAAMiB,EAAOjB,EAASiB,KAAKa,MACrBZ,EAAalB,EAAS+C,eAAejB,MAE3C,QAAmBV,IAAfF,EAA0B,CAE1B,IADA,IAAI8B,EAAQ,EACH1B,EAAI,EAAGA,EAAIL,EAAMK,IAAK,CAC3B,IAAM2B,EAAc/B,EAAWI,GAAGqB,WACd,IAAhBM,IAAoB/B,EAAWI,GAAG4B,EAAI,MAC1CF,GAASC,EAEbD,EAAQrC,KAAKkC,KAAKG,EAAQ,MAE1B,IAAK,IAAI1B,EAAI,EAAGA,EAAIL,EAAMK,IACtBJ,EAAWI,GAAG4B,GAAKF,EACnB9B,EAAWI,GAAG6B,GAAKH,GAMhB,SAASI,EAAT,GAA2C,IAAD,IAAxBpD,EAAwB,EAAxBA,SAAUqD,EAAc,EAAdA,YACjCpC,EAAI,UAAGjB,EAASiB,YAAZ,aAAG,EAAea,MACtBwB,EAAQrC,EAAO,EACfC,EAAU,UAAGlB,EAAS+C,sBAAZ,aAAG,EAAyBjB,MAwB5C,OAAO,sBAAK5B,UAAWC,YAAF,wVAAd,UAcH,iCAAOmD,EAAOA,EAAQ,EAAI,SAAW,WACrC,cAAC5B,EAAA,EAAD,CACII,MAAOwB,EACPvB,SAAU,SAACC,EAAGC,GAAJ,OAvCDH,EAuCmBG,EAAE,EAtClCjC,EAASiB,KAAKa,MAAQnB,KAAKiB,IAAI,EAAGjB,KAAKgB,IAhJ9B,GAgJ4CG,IACrDgB,EAAsB9C,QACtBqD,EAAY,eAAIrD,IAHpB,IAAiB8B,GAwCTD,KAAM,EACNF,IAAK,EACLC,IAAK2B,KAGT,cAACnD,EAAD,iCACA,cAAC,aAAD,UAAaE,EAAcgD,KAE3B,sBAAKpD,UAAWC,YAAF,6HAAd,UAKI,cAACC,EAAD,0BACA,cAACsC,EAAD,CAAazB,KAAMA,EAAMC,WAAYA,IAErC,cAACd,EAAD,kDACA,cAACY,EAAD,CAAYC,KAAMA,EAAMC,WAAYA,EAAYC,aAnDxD,SAAsBZ,EAAGiB,GACrB,IAAMgC,EAAMxD,EAAS+C,eAAejB,MAAMvB,GACpCkD,EAAOD,EAAI/B,SACJ,IAATgC,GACAD,EAAIN,EAAI1B,EACRgC,EAAIL,EAAI,IAERK,EAAIN,GAAK1B,EAAYiC,EACrBD,EAAIL,GAAK3B,EAAYiC,GAEzBX,EAAsB9C,GACtBqD,EAAY,eAAIrD,a,qBCxKT,MAA0B,wCCA1B,MAA0B,wCCKnC0D,EAAgBC,EAAQ,GAARA,CAAgCC,GAEvC,SAAeC,IAA9B,+B,4CAAe,kDAAA9D,EAAA,6DACL+D,EAAS1E,SAASC,eAAe,QACjC0E,EAAKD,EAAOE,WAAW,SAE7BF,EAAOpE,iBAAiB,cAAc,SAACsC,GAAD,OAAOA,EAAEiC,qBAGzCC,EAAQ,IAAIN,SACZO,WAAa,IAAIP,QAAY,QAC7BQ,EAAS,IAAIR,oBACf,GAAInE,OAAO4E,WAAW5E,OAAO6E,YAAa,GAAK,KAE7CC,EAAW,IAAIX,gBAAoB,CAACY,QAAST,IAZxC,SAeuBU,MAAMC,GAf7B,+BAe0CC,OAf1C,eAeLC,EAfK,iBAgByBH,MAAMI,GAhB/B,gCAgB4CF,OAhB5C,eAgBLG,EAhBK,OAkBM,IACX9E,EAAW,CACbiB,KAAM,CAACa,MAAO,GACdiB,eAAgB,CAACjB,MAAO,YAAI,IAAIiD,MAHnB,KAGoCC,KAAI,kBAAM,IAAIpB,UAAc,EAAG,OAChFqB,KAAM,CAACnD,MAAO,KAETiB,eAAejB,MAAM,GAAGoB,EAAIvC,KAAKkC,KAAK,IAC/C7C,EAAS+C,eAAejB,MAAM,GAAGoB,EAAIvC,KAAKkC,KAAK,IACzCqC,EAAS,IAAItB,OACf,IAAIA,iBAAqB,IAAM,GAAI,IAEnC,IAAIA,iBAAqB,CACrBuB,QAAS,CACLC,SAbK,GAcLC,KAAM1E,KAAK2E,IAEftF,WACA4E,eACAE,oBAGRZ,EAAMqB,IAAIL,GAIJM,EAAS,CACX,IAAI5B,UAAc,EAAG,EAAG,GAAI,IAAIA,UAAc,IAAK,EAAG,GACtD,IAAIA,UAAc,EAAG,EAAG,GAAI,IAAIA,UAAc,EAAG,IAAK,GACtD,IAAIA,UAAc,EAAG,EAAG,GAAI,IAAIA,UAAc,EAAG,EAAG,MAElD6B,EAAO,IAAI7B,gBACb,IAAIA,kBAAuB8B,cAAcF,GACzC,IAAI5B,oBAAwB,CAAC+B,MAAO,WAExCzB,EAAMqB,IAAIE,IAGJG,EAAW,IAAIlC,EAAcU,EAAQN,IAClC+B,eAAgB,EACzBD,EAASE,YAAc,GACvBF,EAASG,YAAc,IACvBH,EAASI,YAAc,EAEvB5B,EAAO6B,SAASC,EAAI,EA7DT,kBA+DJ,CACHnC,KAAIG,QACJE,SAAQG,WAAUqB,WAClBV,SAAQlF,aAlED,6C,sBCPA,SAASmG,EAAOtG,EAAKf,EAAOC,GACvC,GAAY,OAARc,EAAJ,CACA,IAAO0E,EAAoB1E,EAApB0E,SAAUH,EAAUvE,EAAVuE,OAEjBA,EAAOgC,OAAStH,EAAMC,EACtBqF,EAAOiC,yBACP9B,EAAS+B,QAAQxH,EAAOC,ICNb,SAASL,EAAQmB,GAC5B,IAAO0E,EAA+C1E,EAA/C0E,SAAUL,EAAqCrE,EAArCqE,MAAOE,EAA8BvE,EAA9BuE,OAAQwB,EAAsB/F,EAAtB+F,SAAU5F,EAAYH,EAAZG,SAC1CuG,uBAAsB,kBAAM7H,EAAQmB,MACxB,OAARA,IAGJ0E,EAASiC,OAAOtC,EAAOE,GACvBwB,EAASa,cAEarF,IAAlBvB,EAAI6G,UACJ7G,EAAI6G,WAAa,IAAIC,KAErB3G,EAASiF,KAAKnD,MAAQ,OAAS,IAAI6E,KAAS9G,EAAI6G,YC4BzCE,MA5Bf,WACE,MAAgC/H,mBAAS,IAAzC,mBAAOmB,EAAP,KAAiBqD,EAAjB,KAEA,OAAO,sBAAKnD,UAAWC,YAAF,4NAAd,UAWD,cAACiD,EAAD,CACIpD,SAAUA,EACVqD,YAAaA,IAEjB,cAAC9E,EAAD,CACIC,OAAQqI,EACRpI,SAAUS,EACVR,QAASoI,EAETnI,aAAc0E,QCvBX0D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAShB,OACP,cAAC,IAAMiB,WAAP,UACE,cAAC,EAAD,MAEFrI,SAASC,eAAe,SAM1B0H,M","file":"static/js/main.879c3bdf.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { css } from '@emotion/css';\n\nimport { InlineMath } from 'react-katex';\n\nimport useWindowSize from 'hooks/windowResize';\n\n\nexport default function ResponsiveCanvas({onInit, onResize, animate, initUniforms}) {\n    const {width, height} = useWindowSize('canvas-container');\n    const [ctx, setCtx] = useState(null);\n\n    useEffect(() => {\n        (async function() {\n            const ctx = await onInit();\n            setCtx(ctx);\n            initUniforms(ctx.uniforms);\n            animate(ctx);\n        })();\n    }, [onInit, animate, initUniforms]);\n    useEffect(() => {onResize(ctx, width, height);}, [onResize, ctx, width, height]);\n\n    return <div id='canvas-container' className={css`\n        flex-grow: 1;\n        overflow: hidden;\n        position: relative;\n    `}>\n        <div className={css`\n            position: absolute;\n            top: 32px;\n            left: 32px;\n            color: white;\n            opacity: 0.8;\n            z-index: 2;\n\n            font-size: 24px;\n\n            @media (max-width: 1000px) {\n                font-size: 20px;\n                top: 16px;\n                left: 16px;\n            }\n        `}><InlineMath>Q(\\theta, \\phi) \\propto |\\langle\\theta, \\phi \\, | \\, \\psi\\rangle|^2</InlineMath></div>\n        <canvas\n        id='main'\n        width={width} height={height}\n        className={css`\n            display: block;\n        `}\n    /></div>;\n};\n","import { useState, useEffect } from 'react';\n\nexport default function useWindowSize(elementID) {\n    const [windowSize, setWindowSize] = useState({width: null, height: null});\n\n    function handleResize() {\n        const element = document.getElementById(elementID);\n        setWindowSize({width: element.offsetWidth, height: element.offsetHeight});\n    }\n\n    useEffect(() => {\n        window.addEventListener('resize', handleResize);\n        handleResize();\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    return windowSize;\n}\n","import React from 'react';\nimport { css } from '@emotion/css';\n\nimport Slider from '@material-ui/core/Slider';\n\nimport { InlineMath } from 'react-katex';\n\n\nconst MAX_SPIN = 14;\n\n\nfunction formatSpin(spin) {\n    if (spin === undefined) {return;}\n\n    if (spin % 2 === 0) {\n        return (spin/2).toString();\n    } else {\n        return `${spin}/2`;\n    }\n}\n\n\nfunction Header({children}) {\n    return <h2 className={css`\n        margin-top: 32px;\n\n        font-size: 14px;\n        color: hsl(200, 10%, 40%);\n        font-weight: 500;\n        letter-spacing: 0.09em;\n        text-transform: uppercase;\n\n        @media (max-width: 1000px) {\n            font-size: 12px;\n            margin-top: 16px;\n        }\n    `}>{children}</h2>;\n}\n\nfunction decomposition(n) {\n    const terms = [];\n    let binom = 1;\n    for (let k = 0; k <= Math.floor(n/2); k++) {\n        if (k > 3) {\n            terms.push('\\\\cdots');\n            break;\n        }\n\n        const exponent = binom * (n+1-2*k)/(n+1);\n        if (exponent > 1) {\n            terms.push(`\\\\mathbf{${n+1-2*k}}^{\\\\otimes${exponent}}`);\n        } else {\n            terms.push(`\\\\mathbf{${n+1-2*k}}`);\n        }\n\n        binom *= n+1-k;\n        binom /= k+1;\n    }\n    return `\\\\mathbf{2}^{\\\\otimes ${n}} = ` + terms.join('\\\\oplus');\n}\n\n\nfunction Amplitudes({spin, amplitudes, setAmplitude}) {\n    if (amplitudes === undefined) {return null;}\n    const output = [];\n    for (let [i, entry] of Object.entries(amplitudes)) {\n        if (i > spin - 1) continue;\n        const magnitude = entry.length();\n\n        output.push(<div key={i} className={css`\n            color: hsl(200, 10%, 30%);\n            display: flex;\n            flex-direction: row;\n        `}>\n             <span className={css`min-width: 64px;`}>\n                <InlineMath>{`|${i}\\\\rangle`}</InlineMath>\n             </span>\n             <Slider\n                min={0} max={1} step={0.001}\n                value={magnitude}\n                onChange={(e, v) => setAmplitude(i, v)}\n             />\n        </div>);\n    }\n    return <>{output}</>;\n}\n\nfunction ObservableEntry({name, value, err, unit}) {\n    const numString = `${value.toFixed(3)} \\\\, \\\\pm \\\\, ${err.toFixed(3)}`;\n    if (unit === undefined) {\n        return <InlineMath>{`\\\\langle ${name}\\\\rangle = ${numString}`}</InlineMath>;\n    }\n    return <InlineMath>{`\\\\langle ${name}\\\\rangle = (${numString}) \\\\, ${unit}`}</InlineMath>;\n}\n\n\nfunction Observables({spin, amplitudes}) {\n    let n = 0;\n    for (let i = 0; i < spin; i++) {\n        const prob = amplitudes[i].lengthSq();\n        n += prob * i;\n    }\n\n    let n_err = 0;\n    for (let i = 0; i < spin; i++) {\n        const prob = amplitudes[i].lengthSq();\n        n_err += prob * (i - n)**2;\n    }\n    n_err = Math.sqrt(n_err);\n\n    return <div className={css`\n        display: flex;\n        flex-direction: column;\n        \n        justify-content: space-between;\n        min-height: 60px;\n    `}>\n        <ObservableEntry name='N_{\\mathrm{exc}}' value={n} err={n_err}/>\n        <ObservableEntry name='S_z' value={n - (spin-1)/2} err={n_err} unit='\\hbar'/>\n    </div>\n}\n\n\n\nfunction normalizeWavefunction(uniforms) {\n    // Normalize spin components\n    const spin = uniforms.spin.value;\n    const amplitudes = uniforms.spinComponents.value;\n\n    if (amplitudes !== undefined) {\n        let total = 0;\n        for (let i = 0; i < spin; i++) {\n            const probability = amplitudes[i].lengthSq();\n            if (probability === 0) {amplitudes[i].x = 1e-3;}\n            total += probability;\n        }\n        total = Math.sqrt(total + 1e-3);\n\n        for (let i = 0; i < spin; i++) {\n            amplitudes[i].x /= total;\n            amplitudes[i].y /= total;\n        }\n    }\n}\n\n\nexport default function Sidebar({uniforms, setUniforms}) {\n    const spin = uniforms.spin?.value;\n    const atoms = spin - 1;\n    const amplitudes = uniforms.spinComponents?.value;\n\n    function setSpin(value) {\n        uniforms.spin.value = Math.max(2, Math.min(MAX_SPIN, value));\n        normalizeWavefunction(uniforms);\n        setUniforms({...uniforms});\n    }\n\n    function setAmplitude(n, magnitude) {\n        const obj = uniforms.spinComponents.value[n];\n        const orig = obj.length();\n        if (orig === 0) {\n            obj.x = magnitude;\n            obj.y = 0;\n        } else {\n            obj.x *= magnitude / orig;\n            obj.y *= magnitude / orig;\n        }\n        normalizeWavefunction(uniforms);\n        setUniforms({...uniforms});\n    }\n\n\n\n    return <div className={css`\n        min-width: 400px;\n        background-color: white;\n        box-shadow: 1px 1px 4px hsla(200, 10%, 10%, 0.1);\n        font-size: 18px;\n        padding: 32px;\n\n        @media (max-width: 1000px) {\n            min-width: unset;\n            padding: 20px;\n\n            font-size: 14px;\n        }\n    `}>\n        <span>{atoms}{atoms > 1 ? ' atoms' : ' atom'}</span>\n        <Slider\n            value={atoms}\n            onChange={(e, v) => setSpin(v+1)}\n            step={1}\n            min={1}\n            max={MAX_SPIN-1}\n        />\n\n        <Header>Spin Decomposition</Header>\n        <InlineMath>{decomposition(atoms)}</InlineMath>\n\n        <div className={css`\n            @media (max-width: 1000px) {\n                display: none;\n            }\n        `}>\n            <Header>Observables</Header>\n            <Observables spin={spin} amplitudes={amplitudes}/>\n\n            <Header>Stretched Representation Amplitudes</Header>\n            <Amplitudes spin={spin} amplitudes={amplitudes} setAmplitude={setAmplitude}/>\n        </div>\n    </div>;\n};\n","export default __webpack_public_path__ + \"static/media/sphereVert.074410ee.glsl\";","export default __webpack_public_path__ + \"static/media/sphereFrag.141cd3b6.glsl\";","import * as THREE from 'three';\n\nimport vsResource from './shader/sphereVert.glsl';\nimport fsResource from './shader/sphereFrag.glsl';\n\nconst OrbitControls = require('three-orbit-controls')(THREE);\n\nexport default async function initialize() {\n    const canvas = document.getElementById('main');\n    const gl = canvas.getContext('webgl');\n\n    canvas.addEventListener('touchstart', (e) => e.preventDefault());\n\n    // Initialize scene\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x080808);\n    const camera = new THREE.PerspectiveCamera(\n        75, window.innerWidth/window.innerHeight, 0.1, 1000\n    );\n    const renderer = new THREE.WebGLRenderer({context: gl});\n\n    // Initialize geometry\n    const vertexShader = await (await fetch(vsResource)).text();\n    const fragmentShader = await (await fetch(fsResource)).text();\n\n    const MAX_SIZE = 14;\n    const uniforms = {\n        spin: {value: 4},\n        spinComponents: {value: [...new Array(MAX_SIZE)].map(() => new THREE.Vector2(0, 0))},\n        time: {value: 0},\n    };\n    uniforms.spinComponents.value[0].x = Math.sqrt(0.5);\n    uniforms.spinComponents.value[3].x = Math.sqrt(0.5);\n    const sphere = new THREE.Mesh(\n        new THREE.SphereGeometry(0.99, 32, 32),\n//        new THREE.IcosahedronGeometry(0.99, 5),\n        new THREE.ShaderMaterial({\n            defines: {\n                MAX_SIZE,\n                M_PI: Math.PI,\n            },\n            uniforms,\n            vertexShader,\n            fragmentShader,\n        })\n    );\n    scene.add(sphere);\n\n\n    // Initialize Axes\n    const points = [\n        new THREE.Vector3(0, 0, 0), new THREE.Vector3(1.5, 0, 0),\n        new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 1.5, 0),\n        new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 0, 1.5),\n    ];\n    const axes = new THREE.LineSegments(\n        new THREE.BufferGeometry().setFromPoints(points),\n        new THREE.LineBasicMaterial({color: 0x808080}),\n    );\n    scene.add(axes);\n\n    // Initialize controls\n    const controls = new OrbitControls(camera, canvas);\n    controls.enableDamping = true;\n    controls.rotateSpeed = 0.3;\n    controls.minDistance = 1.5;\n    controls.maxDistance = 5;\n\n    camera.position.z = 3;\n\n    return {\n        gl, scene,\n        camera, renderer, controls,\n        sphere, uniforms,\n    };\n};\n","export default function resize(ctx, width, height) {\n    if (ctx === null) {return;}\n    const {renderer, camera} = ctx;\n\n    camera.aspect = width/height;\n    camera.updateProjectionMatrix();\n    renderer.setSize(width, height);\n};\n","export default function animate(ctx) {\n    const {renderer, scene, camera, controls, uniforms} = ctx;\n    requestAnimationFrame(() => animate(ctx));\n    if (ctx === null) {return;}\n\n    // Render scene\n    renderer.render(scene, camera);\n    controls.update();\n\n    if (ctx.startTime === undefined) {\n        ctx.startTime = +new Date();\n    } else {\n        uniforms.time.value = 1e-3 * (+new Date() - ctx.startTime);\n    }\n};\n","import React, { useState } from 'react';\nimport { css } from '@emotion/css';\n\nimport 'katex/dist/katex.min.css';\n\nimport ResponsiveCanvas from 'components/ResponsiveCanvas';\nimport Sidebar from 'components/Sidebar';\n\nimport handleInit from 'gl/initialize';\nimport handleResize from 'gl/resize';\nimport handleAnimationFrame from 'gl/animate';\n\nfunction App() {\n  const [uniforms, setUniforms] = useState({});\n\n  return <div className={css`\n        width: 100%;\n        height: 100%;\n\n        display: flex;\n        flex-direction: row;\n\n        @media (max-width: 1000px) {\n             flex-direction: column;\n        }\n  `}>\n        <Sidebar\n            uniforms={uniforms}\n            setUniforms={setUniforms}\n        />\n        <ResponsiveCanvas\n            onInit={handleInit}\n            onResize={handleResize}\n            animate={handleAnimationFrame}\n\n            initUniforms={setUniforms}\n        />\n  </div>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}